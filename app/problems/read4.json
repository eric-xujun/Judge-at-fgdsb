{
    "name": "Read N Characters Given Read4",
    "id": "48",
    "discuss_link": "",
    "desc": "<p>The API: <code>int read4(char *buf)</code> reads 4 characters at a time from a file.\n<br/>\nThe return value is the actual number of characters read. For example, it returns 3 if there is only 3 characters left in the file.\n<br/>\nBy using the <code>read4</code> API, implement the function <code>int read(char *buf, int n)</code> that reads n characters from the file.\n<br/>\n<br/>\n<b>Note:</b>\nThe <code>read</code> function will only be called once for each test case.\n</p>",
    "difficulty": "Medium",
    "source": "Facebook",
    "time": "2015-07-02 17:16:31",
    "tags": [],
    "code_cpp": "",
    "code_java": "public class Solution extends Reader4 {\n    /**\n     * @param buf Destination buffer\n     * @param n   Maximum number of characters to read\n     * @return    The number of characters read\n     */\n    public int read(char[] buf, int n) {\n        \n    }\n}",
    "code_ruby": "",
    "code_python": "",
    "code_lua": "",
    "code_scala": "",
    "in_type_cpp": [
        ""
    ],
    "ret_type_cpp": "",
    "out_type_cpp": "",
    "judge_type_cpp": "equal",
    "in_type_java": [
        ""
    ],
    "ret_type_java": "",
    "out_type_java": "",
    "judge_type_java": "equal",
    "judge_type_ruby": "equal",
    "judge_type_python": "equal",
    "judge_type_lua": "equal",
    "judge_call": "function(@)"
}